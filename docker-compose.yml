version: '3'
services:
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - cassandra
      - kafka
    restart: always
    networks:
      - meta-data

  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"
    volumes:
      - ./cassandra:/var/lib/cassandra
    environment:
      - CASSANDRA_START_RPC=true
    restart: always
    networks:
      - meta-data

  producer:
    build:
      context: .
      dockerfile: ProducerDockerfile
    depends_on:
      - kafka
    networks:
      - meta-data
    restart: always
    logging:
      driver: json-file # default, can be omitted

  consumer:
    build:
      context: .
      dockerfile: ConsumerDockerfile
    depends_on:
      - kafka
      - cassandra
    networks:
      - meta-data
    restart: always
  
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: metadata_user
      POSTGRES_PASSWORD: metadata_password
      POSTGRES_DB: metadata
    ports:
      - "5432:5432"
    networks:
      - meta-data


  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    restart: always
    networks:
      - meta-data


networks:
  meta-data:



